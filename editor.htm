<!DOCTYPE html>
<html>

<head>
    <title>Edit place in Moylgrove</title>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
    <link rel="icon" type="image/png" href="favicon96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="favicon32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="favicon16.png" sizes="16x16" />

    <script src="Scripts/azure-storage.common.js"></script>
    <script src="Scripts/azure-storage.table.js"></script>
    <script src="Scripts/azure-storage.blob.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=AryU5OBCq3C8xwf-lo7yDEdItLzoyMQfVuxBkgeZIXFXWDsqLW0WBuNmudPAqj3M&callback=loadMap'
        async defer></script>
    <script src="Scripts/history.js"></script>
    <script type="text/javascript">  var appInsights = window.appInsights || function (a) { function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement("script"); b.src = a.url || "https://az416426.vo.msecnd.net/scripts/a/ai.0.js", d.getElementsByTagName("script")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = ["Event", "Exception", "Metric", "PageView", "Trace", "Dependency"]; f.length;)b("track" + f.pop()); if (b("setAuthenticatedUserContext"), b("clearAuthenticatedUserContext"), b("startTrackEvent"), b("stopTrackEvent"), b("startTrackPage"), b("stopTrackPage"), b("flush"), !a.disableExceptionTracking) { f = "onerror", b("_" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c["_" + f](a, b, d, e, h), i } } return c }({ instrumentationKey: "248aca7d-abf2-40db-8f8a-86cb6db85c92" }); window.appInsights = appInsights, appInsights.queue && 0 === appInsights.queue.length && appInsights.trackPageView();</script>

    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Helvetica, Arial, Sans-Serif;
            background-color: aliceblue;
        }

        .description,
        p {
            font-family: 'Segoe UI', Helvetica, Arial, Sans-Serif
        }


        input:invalid {
            background-color: #ffd0e0;
            border-color: red;
            border-style: solid;
            border-width: 1px;
        }

        .texthead,
        h4 {
            color: royalblue;
            font-size: large;
            font-weight: bold;
            margin: 10px;
        }

        ::placeholder {
            color: #c0c0c0;
        }

        .toolbutton {
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
            outline: 0;
        }

        .toolbutton {
            background-color: royalblue;
            color: white;
            padding: 3px;
            display: inline-block;
            position: relative;
        }

        .toolbutton:hover {
            background-color: cornflowerblue;
        }

        .toolbutton:active {
            background-color: blue;
        }

        .tooltiptext {
            visibility: hidden;
            width: 250px;
            background-color: white;
            color: #404040;
            text-align: center;
            padding: 5px 0;
            border-style: solid;
            border-color: #404040;
            border-width: 1px;
            box-shadow: 2px 2px gray;
            border-radius: 6px;
            position: fixed;
            text-align: left;

            padding: 2px;
            z-index: 1;
        }

        /* Show the tooltip text when you mouse over the tooltip container */

        .toolbutton:hover .tooltiptext {
            visibility: visible;
        }

        .prompt,
        .input {
            height: 30px;
            vertical-align: text-bottom;
            display: inline-block;
        }

        .prompt {
            text-align: right;
        }

        .input {
            background-color: white;
            border-color: royalblue;
            border-width: 1px;
            border-style: solid;
        }

        .alarm {
            background-color: lightpink
        }

        #photo1 {
            background-color: rgb(199, 253, 235);
            outline: 2px dashed black;
            outline-offset: -10px;
        }

        .dialog {
            display: none;
            position: fixed;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1;
        }

        .dialog div {
            display: inline-block;
            position: fixed;
            padding: 10px;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            user-select: none;
            border-color: grey;
            border-style: solid;
            border-radius: 4px;
            text-align: center;
            border-width: 1px;
            background-color: ivory;
        }
    </style>

    <script>
/*
        window.tableService = AzureStorage.createTableServiceWithSas(
            'https://moylgrovehall.table.core.windows.net',
//    '?sv=2017-07-29&sig=0praArIW0UsoFmfJ1KE0E%2FIeu7a8U4tCl1x0tTJzYqQ%3D&spr=https%2Chttp&se=2018-02-22T19%3A25%3A42Z&srt=s&ss=bt&sp=rauwdl'
       // 'https://moylgrovehall.table.core.windows.net/places01?se=2018-02-22T20%3A29%3A00Z&sp=raud&sv=2017-04-17&tn=places01&sig=gqd%2FUrrXTfznFWz0TjkC6Y%2Fvt7TE8zqjIt38vTL4InY%3D'
    //'?se=2018-02-22T20%3A29%3A00Z&sp=raud&sv=2017-04-17&tn=places01&sig=gqd%2FUrrXTfznFWz0TjkC6Y%2Fvt7TE8zqjIt38vTL4InY%3D'   
    '?sv=2017-07-29&sig=L4ndZ0JuQnrq8idq7w2Wx%2BEEXJ9ojBWBmZgBEYPRddQ%3D&spr=https%2Chttp&se=2018-02-22T20%3A56%3A13Z&srt=o&ss=bt&sp=rauwdl'
    );
        
        window.blobService = AzureStorage.createBlobServiceWithSas(
            'https://moylgrovehall.table.core.windows.net',
//            '?sv=2017-07-29&sig=0praArIW0UsoFmfJ1KE0E%2FIeu7a8U4tCl1x0tTJzYqQ%3D&spr=https%2Chttp&se=2018-02-22T19%3A25%3A42Z&srt=s&ss=bt&sp=rauwdl'
'?se=2018-02-22T20%3A29%3A00Z&sp=raud&sv=2017-04-17&tn=places01&sig=gqd%2FUrrXTfznFWz0TjkC6Y%2Fvt7TE8zqjIt38vTL4InY%3D'
); 

//'https://moylgrovehall.table.core.windows.net/places01?se=2018-02-22T20%3A29%3A00Z&sp=raud&sv=2017-04-17&tn=places01&sig=gqd%2FUrrXTfznFWz0TjkC6Y%2Fvt7TE8zqjIt38vTL4InY%3D'        );
 
*/
         window.tableService = AzureStorage.createTableService(
            'moylgrovehall',
            'mFaY0yLcIi/rM4K/ePJKRE7GzbsheBxFxkNZxQVn62g4RcydjH6qziRmr3q5nplsA3OreElOmKB7R+3mIfvdow==');
        window.blobService = AzureStorage.createBlobService('moylgrovehall',
            'mFaY0yLcIi/rM4K/ePJKRE7GzbsheBxFxkNZxQVn62g4RcydjH6qziRmr3q5nplsA3OreElOmKB7R+3mIfvdow==');

        window.addEventListener("beforeunload", function (e) {
            var confirmationMessage = "Close the window and lose edits?";
            if (!window.dirty && hash() == window.oldHash) return "";
            e.returnValue = confirmationMessage;     // Gecko, Trident, Chrome 34+
            return confirmationMessage;              // Gecko, WebKit, Chrome <34
        });


        function DeletePhoto1() {
            $("#photo1img").hide()[0].src = "";
            $("#photo1google").hide().html("");
            $("#photo1prompt").show();
            $("#photo1url")[0].value = "";
            window.place.Pic1 = "";
            window.dirty = true;
        }

        function ShowPhoto1(x) {
            SetPhoto1($("#photo1url")[0].value);
        }

        function SetPhoto1(url) {
            if (!url) return;
            if (url.match(/.*(jpg|jpeg|png|gif)$/i)) {
                $("#photo1prompt").hide();
                $("#photo1google").html("").hide();
                var picBlob = url.replace(/^images\//, "https://moylgrovehall.blob.core.windows.net/history-img/");
                $("#photo1img").show()[0].src = picBlob;
                window.place.Pic1 = url;
            }
            if (url.match(/^<iframe.*<\/iframe>$/)) {
                var urlx = url.replace(/width=".*?"/, "width='300'").replace(/height=".*?"/, "height='225'");
                $("#photo1prompt").hide();
                $("#photo1img").hide()[0].src = "";
                $("#photo1google").html(urlx).show();
                window.place.Pic1 = url.match(/![^"]*/)[0];
            }
            if (url.match(/^!/)) {
                var ww = 300;
                var hh = 225;
                content = "<iframe src='https://www.google.com/maps/embed?pb={0}' id='streetview' width='{1}px' height='{2}px' frameborder='0' style='border:0' allowfullscreen></iframe>".format(url, ww, hh);

                $("#photo1prompt").hide();
                $("#photo1img").hide()[0].src = "";
                $("#photo1google").html(content).show();
                window.place.Pic1 = url;
            }
            window.dirty = true;
        }


        function SetSlides(slideUrls) {
            for (var i = 0; i < slideUrls.length; i++) {
                var url = slideUrls[i];
                AddPhoto2(url, i == 0);
            }
        }

        var slideCount = 0;
        function AddPhoto2(url, ui) {
            if (!url || !(url.match(/\.(jpg|jpeg|png|gif)$/i))) { return; }
            var picBlob = url.replace(/^images\//, "https://moylgrovehall.blob.core.windows.net/history-img/");
            $("#photo2Gallery").append("<img id='slide{1}' src='{0}' title='Click to show at left' onclick='ShowPhoto2({1})' style='max-width:100px;max-height:100px;display:inline;'/> "
                .format(picBlob, ++slideCount));
            var gallery = $("#photo2Gallery")[0];
            gallery.lastElementChild.url = url;
            gallery.scrollTop = gallery.scrollHeight;
            if (ui) {
                $("#photo2url")[0].value = "";
                ShowPhoto2(slideCount);
            }
            window.dirty = true;
        }

        function ShowPhoto2(id) {
            var url = $("#slide" + id)[0].src;
            var picBlob = url.replace(/^images\//, "https://moylgrovehall.blob.core.windows.net/history-img/");
            $("#photo2img").show()[0].src = picBlob;
            $("#photo2prompt").hide();
            $("#photo2")[0].currentId = id;
        }

        function DeletePhoto2() {
            var id = $("#photo2")[0].currentId;
            var next = null;
            if (id) {
                $("#photo2")[0].currentId = "";
                var toRemove = $("#slide" + id);
                next = toRemove.next();
                if (next[0] == null) {
                    next = toRemove.prev();
                }
                toRemove.remove();
                var gallery = $("#photo2Gallery")[0];
                if (next[0]) {
                    $("#photo2")[0].currentId = next[0].id.substr(5);
                    $("#photo2img").show()[0].src = next[0].src;
                }
                else {
                    $("#photo2prompt").show();
                    $("#photo2img").hide()[0].src = "";
                }
            }
            window.dirty = true;
        }

        function saveSelection() {
            if (window.getSelection) {
                sel = window.getSelection();
                if (sel.getRangeAt && sel.rangeCount) {
                    return sel.getRangeAt(0);
                }
            } else if (document.selection && document.selection.createRange) {
                return document.selection.createRange();
            }
            return null;
        }

        function restoreSelection(range) {
            if (range) {
                if (window.getSelection) {
                    sel = window.getSelection();
                    sel.removeAllRanges();
                    sel.addRange(range);
                } else if (document.selection && range.select) {
                    range.select();
                }
            }
        }

        function nodeIsInLink(n) {
            if (!n) return null;
            if (n.nodeName == "A") return n;
            return nodeIsInLink(n.parentNode);
        }

        function placeFromTitle(title) {
            var cf = comparable(title);
            return window.places[cf];
        }



        function createLink() {
            var selection = window.getSelection();
            var inLink = nodeIsInLink(selection.anchorNode);
            if (!isInNode(selection.anchorNode, "text") || selection.isCollapsed && !inLink) {
                window.alert("To create a link to another web page, first select a phrase in the text.");
                return;
            }

            if (inLink) {
                // Expand the selection to the whole link:
                window.getSelection().removeAllRanges();
                var range = document.createRange();
                range.selectNode(inLink);
                window.getSelection().addRange(range);
                $("#linkRef").value = inLink.href;
            } else {
                var phrase = window.getSelection().toString();
                var place = placeFromTitle(phrase);
                if (place) {
                    $("#linkRef")[0].value = "./?place=" + place;
                }
            }

            $("#linkRemoveOption")[0].style.display = (inLink ? "block" : "none");
            var jLinkDialog = $("#linkDialog");
            jLinkDialog[0].savedSelection = saveSelection();
            jLinkDialog.show();

            // Select te dialog text:
            $("#linkRef").select();
        }
        function CompleteCreateLink() {
            var jLinkDialog = $("#linkDialog");
            jLinkDialog.hide();
            restoreSelection(jLinkDialog[0].savedSelection);
            var href = $("#linkRef")[0].value;
            var selection = window.getSelection();
            if (href.length > 5 && !selection.isCollapsed && isInNode(selection.anchorNode, "text")) {
                document.execCommand("CreateLink", false, href);
                $("#text a").attr("target", "_blank");
                $("#text a").each(function (i, e) { e.title = e.href; });
                $("#linkRef")[0].value = "";
                window.dirty = true;
            }
        }
        function CompleteRemoveLink() {
            var jLinkDialog = $("#linkDialog");
            jLinkDialog.hide();
            restoreSelection(jLinkDialog[0].savedSelection);
            if (isInNode(window.getSelection().anchorNode, "text")) {
                document.execCommand("Unlink");
            }
        }


        function showDeleteDialog(action, thingToDelete) {
            var dialog = $("#deleteDialog");
            $("#thingToDelete").text(thingToDelete);
            dialog[0].action = action;
            dialog.show();
        }

        function formatDoc(sCmd, sValue, ui) {
            var x = document.getSelection().focusNode.parentElement;
            if (sCmd == "InsertText" || isInNode(x, "text")) {
                document.execCommand(sCmd, ui, sValue);
            }
            x.focus();
        }

        // On map system load
        function loadMap() {
            $(document).ready(function () {
                window.dirty = false;
                window.maplocation = new Microsoft.Maps.Location(52.068287, -4.747708);
                var place = window.place = {};
                if (!isAdvancedBrowser) {
                    $("body").html("<div style='position:fixed;top:100px;font-size:large;font-weight:bold;margin:10px;'>Sorry - This form doesn't work on your browser. Please complain to Alan.</div>");
                }
                window.map = new Microsoft.Maps.Map(document.getElementById('theMap'),
                    {
                        mapTypeId: Microsoft.Maps.MapTypeId.aerial,
                        center: window.maplocation,
                        zoom: 19,
                        showLocateMeButton: false,
                        showMapTypeSelector: false
                    });
                window.pushpin = new Microsoft.Maps.Pushpin(
                    window.maplocation,
                    { title: "new place", color: "#A00000", text: "+" }
                );
                window.map.entities.push(pushpin);
                setUpMapMenu();
                setUpMapClick();

                if (location.queryParameters.id) {
                    var place = window.place = {};
                    window.tableService.retrieveEntity("places01", "p1", location.queryParameters.id,
                        function (error, result, response) {
                            if (!error) {
                                place.Title = p(result.Title);
                                place.Location = (result.Latitude && result.Longitude ? new Microsoft.Maps.Location(result.Latitude._, result.Longitude._) : null);
                                place.Pic1 = p(result.Pic1);
                                place.Slides = result.Pic2 ? result.Pic2._.split(";") : "";
                                place.Postcode = p(result.Postcode);
                                place.id = location.queryParameters.id;
                                place.Subtitle = p(result.Subtitle);
                                place.Text = p(result.Text);
                                place.Year = p(result.Year);
                                place.Zoom = p(result.Zoom);

                                $("#title")[0].value = place.Title;
                                $("#subtitle")[0].value = place.Subtitle;
                                $("#year")[0].value = place.Year;
                                $("#postcode")[0].value = place.Postcode.substr(-2, 2);
                                $("#zoom")[0].checked = place.Zoom == "1";
                                $("#text").html(trimQuotes(place.Text));
                                setMapLocation(place.Location, true);
                                updatePlaceName();
                                SetPhoto1(place.Pic1);
                                SetSlides(place.Slides);
                            }
                        });
                }
                else {
                    BeginGetNewPlaceId();
                    $("#text").html("");
                    var lat = location.queryParameters.lat;
                    var long = location.queryParameters.long;
                    if (zoomed(lat, long)) $("#zoom")[0].checked = true;
                    setMapLocation(new Microsoft.Maps.Location(location.queryParameters.lat, location.queryParameters.long), true);
                }
                window.oldHash = hash();
            })
        };

        function hash() {
            var s = gatherToSave();
            var long = s.Title + s.Subtitle + s.Year + s.Postcode + s.Zoom + s.Text + s.Longitude + s.Latitude + s.Pic1 + s.Pic2;
            return hashCode(long);
        }


        function gatherToSave() {
            var s = {};
            s.PartitionKey = "p1";
            s.RowKey = "" + window.place.id;
            s.Title = $("#title")[0].value;
            s.Subtitle = $("#subtitle")[0].value;
            s.Year = $("#year")[0].value;

            var pcEnd = $("#postcode")[0].value;
            s.Postcode = (pcEnd ? "SA43 3" + pcEnd : "");
            s.Zoom = ($("#zoom")[0].checked ? "1" : "0");
            s.Text = $("#text").html();
            s.Longitude = window.maplocation.longitude.toFixed(6);
            s.Latitude = window.maplocation.latitude.toFixed(6);
            s.Pic1 = window.place.Pic1;

            s.Pic2 = "";
            $("#photo2Gallery img").each(function (ix, img) {
                s.Pic2 += (ix > 0 ? ';' : '') + img.url;
            });
            return s;
        }

        function SavePlace() {
            var s = gatherToSave();

            window.tableService.insertOrReplaceEntity("places01", s,
                function (error, result, response) {
                    if (!error) {
                        $("#savedDialog").show();
                        window.dirty = false;
                        window.oldHash = hash();
                        if (!location.queryParameters.id) {
                            window.open(location.origin + location.pathname + "?id=" + s.RowKey, "_self");
                        }
                    } else {
                        window.alert("Failed to save. Try again later, and/or complain to Alan.");
                    }
                });
        }


        function updatePlaceName() {
            var title = $("#title")[0].value; //.text();
            window.pushpin.setOptions({ title: title });
            window.dirty = true;
        }

        function CentreMapOnPlace() {
            window.map.setView({ center: window.maplocation });
        }

        function setMapLocation(loc, moveMap) {
            window.maplocation = loc;
            var lat = loc.latitude.toFixed(6);
            var long = loc.longitude.toFixed(6);
            $("#latlong").text("{0}, {1}".format(lat, long));
            $("#googleLink")[0].href = "https://www.google.co.uk/maps/@{0},{1},400m/data=!3m1!1e3".format(lat, long);
            window.pushpin.setLocation(loc);
            if (moveMap) {
                window.map.setView({ center: loc });
            }
        }

        function setUpMapMenu() {
            window.menuBox = new Microsoft.Maps.Infobox(
                window.map.getCenter(),
                {
                    visible: false,
                    showPointer: true,
                    offset: new Microsoft.Maps.Point(0, 0),
                    actions: [
                        {
                            label: "Move place to here  .",
                            eventHandler: function () {
                                var loc = window.menuBox.getLocation();
                                window.menuBox.setOptions({ visible: false });
                                setMapLocation(loc, false);
                            }
                        }
                    ]
                });
            window.menuBox.setMap(window.map);
            Microsoft.Maps.Events.addHandler(window.map, "rightclick",
                function (e) {
                    window.menuBox.setOptions({
                        location: e.location,
                        visible: true
                    });
                });
        }

        function setUpMapClick() {
            Microsoft.Maps.Events.addHandler(window.map, "click", function (e) {
                if (window.menuBox != null) { window.menuBox.setOptions({ visible: false }); }
            });
        }

        function mapChange(v) {
            if (v == "os") {
                if (window.map.getZoom() > 17) {
                    window.map.setView({ zoom: 17, mapTypeId: Microsoft.Maps.MapTypeId.ordnanceSurvey });
                }
                else {
                    window.map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.ordnanceSurvey });
                }
            }
            else {
                window.map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.aerial });
            }
        }

        // TODO: mutex
        function BeginGetNewPlaceId() {
            window.place = { id: -1 };
            window.tableService.retrieveEntity("places01", "p1", "index",
                function (error, result, response) {
                    if (result.index) {
                        var index = +(result.index._) + 1;
                        window.place.id = index;
                        var newIndex = {
                            PartitionKey: "p1",
                            RowKey: "index",
                            index: index
                        };
                        window.tableService.insertOrReplaceEntity("places01", newIndex,
                            function (error, result, response) {

                            });
                    }
                });

        }

        function DeletePlace() {
            var deleteEntity = {
                PartitionKey: "p1",
                RowKey: window.place.id
            };

            window.tableService.deleteEntity('places01', deleteEntity, function (error, result, response) {
                if (error) {
                    // Delete table entity error
                } else {
                    // Delete table entity successfully
                    window.open("editor.htm?id=" + window.place.id);
                }
            });
        }


        function UploadFile2(ff) {
            var count = ff.length;
            $("#photo2prompt").text("Uploading " + count + "...").show();
            $("#photo2img").hide();
            var fn = window.place.id + "-" + (new Date()).getTime().toString().substr(2, 10);
            $.each(ff, function (i, file) {
                var suffix = file.name.replace(/^.*\./, ".");
                var fileName = fn + "-" + i + suffix;
                window.blobService.createBlockBlobFromBrowserFile('history-img',
                    fileName, file, null,
                    function (error, result, response) {
                        if (!error) {
                            if (--count <= 0) {
                                $("#photo2prompt").text("Done.");
                            }
                            else {
                                $("#photo2prompt").text("Uploading " + count + "...")
                            }
                            AddPhoto2("images/" + fileName, count <= 0);
                        }
                        else {
                            $("#photo2prompt").text("Failed.");
                        }
                    });

            });
        }

        function UploadFile(f) {
            /*
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#photo1img")[0].src = e.target.result;
                $("#photo1img").show();
            }
            reader.readAsDataURL(f);
            */
            $("#photo1prompt").text("Uploading...").show();
            $("#photo1img").hide();
            $("#photo1google").hide();
            var suffix = f.name.replace(/^.*\./, ".");
            var fileName = window.place.id + "-" + (new Date()).getTime().toString() + suffix;
            window.blobService.createBlockBlobFromBrowserFile('history-img', fileName, f, null,
                function (error, result, response) {
                    if (!error) {
                        $("#photo1prompt").text("Done.");
                        SetPhoto1("images/" + fileName);
                    }
                    else {
                        $("#photo1prompt").text("Failed.");
                    }
                });
        }

        window.places = {};
        var query = new AzureStorage.TableQuery().select(['RowKey', 'Title']);
        window.tableService.queryEntities("places01", query, null, function (error, result, response) {
            $.each(result.entries, function (i, v) {
                if (v && v.Title && v.Title._) {
                    var tcf = comparable(v.Title._);
                    if (tcf) {
                        window.places[tcf] = v.RowKey._;
                    }
                }
            });
        });

    </script>
</head>

<body>
    <div id="deleteDialog" class="dialog" onClick="$(this).hide();">
        <div>
            Delete
            <span id='thingToDelete'>it</span>?
            <span class="toolbutton">Cancel</span>
            <span class="toolbutton" style="background-color:red" onClick="$('#deleteDialog')[0].action()">Delete</span>
        </div>
    </div>
    <div id="linkDialog" class="dialog" onClick="$(this).hide();">
        <div onclick="noPropagate(event)">Paste a link to a web page here:
            <br/>
            <input id="linkRef" type="text" size="20" pattern="https?://.+|\.\/\?place=[0-9]{3}" placeholder="http://..." />
            <input type="button" onclick="CompleteCreateLink()" value="Link" />
            <span id="linkRemoveOption">
                - or -
                <br/>
                <input type="button" onclick="CompleteRemoveLink()" value="Remove link" />
            </span>
        </div>
    </div>
    <div id="savedDialog" class="dialog" onClick="$(this).hide();">
        <div>
            <h2>Saved!</h2>Refresh the map window to see the changes.
        </div>
    </div>
    <table width="100%" style="table-layout:fixed;">
        <col width="150px" />
        <col width="410px" />
        <col width="600px;" />
        <tr valign="middle">
            <td>
                <h4>Location</h4>
            </td>
            <td>
                <span id="latlong"></span> &nbsp;&nbsp; Zoom in:
                <input id="zoom" type="checkbox" title="The map zooms closer to distinguish places in cluttered areas." /> &nbsp;&nbsp;SA43 3
                <input id="postcode" type="text" maxlength="2" style="width:25px;" pattern="[A-Za-z]{2}" />
            </td>
            <td align="right">
                <div class="toolbutton" title="Save your changes" onclick="SavePlace()">Save</div>
            </td>
        </tr>
        <tr valign="top">
            <td>
                <h4>Title</h4>
                <p>Current name of the property. Use the subtitle for alternative or old names.</p>
            </td>
            <td>
                <div style="border-style:hidden;">
                    <input id="title" class="input" placeholder="place name" type="text" style="width:290px;font-size:large;color:royalblue;font-weight:bold;"
                        onchange="updatePlaceName()" required="required"></input>
                    <div class="prompt">&nbsp;Built c.</div>
                    <input id="year" type="number" min="1600" max="2050" class="input" style="width:50px" />
                </div>
                <input id="subtitle" type="text" size="40" />
            </td>
            <td rowspan="2" valign="top">
                <div style="position:relative;">
                    <div style="position:absolute">
                        <div id="theMap" style="position:relative;height:400px;width:600px;">
                            <h2 style="position:absolute;top:100px;left:40px;">Getting the map...</h2>
                        </div>
                        <div style='position:absolute;top:0px;left:0;width:150px;height:50px;background-color:rgb(40,40,40);border-radius:4px;color:white'>
                            <div style="vertical-align:middle;">
                                <input type="radio" name="mapSelector" value="os" onchange="mapChange('os')">Ordnance Survey</input>
                                <br/>
                                <input type="radio" name="mapSelector" value="aerial" onchange="mapChange('aerial')" checked="checked">Aerial photos</input>
                            </div>
                        </div>
                        <div style='position:absolute;top:120px;right:34px;height:35px;width:35px;'>
                            <img src='/img/target.png' title="Centre map on place" onclick="CentreMapOnPlace()" />
                        </div>
                    </div>
                </div>
            </td>
        </tr>
        <tr valign="top">
            <td>
                <h4>Description</h4>
                <p>The main events and people.</p>
                <p>Please cite authoritative sources.</p>
            </td>
            <td>
                <div id="toolBar1">
                    <div class="toolbutton" onclick="formatDoc('formatblock','h4')" title="Sub heading">H</div>
                    <div class="toolbutton" onclick="formatDoc('formatblock','div')" title="Plain paragraph">¶</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','â')">â</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','ê')">ê</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','î')">î</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','ô')">ô</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','û')">û</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','ŵ')">ŵ</div>
                    <div class="toolbutton" onclick="formatDoc('InsertText','ŷ')">ŷ</div>
                    <div class="toolbutton" onclick="createLink()" title="Link a phrase to another web page">Link</div>
                </div>

                <div id="text" style="background-color:white;padding:5px;width:400px;height:300px;border-style:solid;border-width:1px;overflow:auto;"
                    contenteditable="true">
                    Please wait...
                </div>

            </td>

        </tr>
        <tr valign="top" style="background-color:#e0f0ff">
            <td>
                <h4>Street view
                    <br/>or photo 1</h4>
                    <p>Provide a photo - landscape orientation works best; or set a street view.</p>
            </td>
            <td>
                <div id="photo1" style="width:300px;height:225px;border-style: solid;border-color:blue;border-width:1px;display:inline-block;"
                    ondrop="drop('photo1',event);" ondragover="dragover('photo1',event)" ondragleave="dragleave('photo1')">
                    <p id="photo1prompt" style="vertical-align:middle;text-align:center;padding:10px;color:gray;">
                        Upload a picture from your computer: click the button
                        <br/>-or-
                        <br/>Paste a link to a picture on the web
                        <br/>-or-
                        <br/>Paste the 'embed' link from a Google Street View.</p>
                    <img id="photo1img" style="display:none" width="300px" />
                    <div id="photo1google" style="display:none"></div>
                </div>
                <input type="button" onclick="showDeleteDialog(DeletePhoto1, 'the picture')" value="X" style="color:red;background-color:#ffe0ff;vertical-align:top;"
                    title="Delete this picture or street view" />
            </td>
            <td>
                Upload a photo:&nbsp;&nbsp;
                <input id="pic1file" onchange="UploadFile(this.files[0])" type="file" title="upload" name="Upload" id="uploadpic1" />
                <br/> - or -
                <br/> Paste a link to a picture, or Google Street View:
                <br/>
                <input id="photo1url" type="text" style="width:300px" pattern="<iframe.*</iframe>|http.*(jpg|jpeg|png|gif) *" placeholder="<iframe... or http...jpg|.png|.gif"
                    onchange="ShowPhoto1()" onfocus="this.select()" />
                <input type="button" onclick="ShowPhoto1()" value="+" style="background-color:lightgreen;" title="Set the photo or street view."
                />
                <br/>
                <br/>
                <a id="googleLink" href="#" target="_blank">Open Google maps to get street view</a>
                <p>
                    <small>
                        <i>A Google map opens in a new window. Set it to Street View and adjust the view. In the pull-down menu
                            at top left, select Share, then select Embed. Copy the link '&lt;iframe...'. Paste it into the
                            field above.
                        </i>
                    </small>
                </p>
            </td>
        </tr>
        <tr valign="top">
            <td>
                <h4>Slideshow</h4>
                <p>One or more photos. If you provide several, they will automatically show in rotation.</p>
                <p>Landscape orientation works best.</p>
            </td>
            <td>
                <div id="photo2" style="width:300px;height:225px;border-style: solid;border-color:blue;border-width:1px;display:inline-block;"
                    ondrop="drop('photo2',event);" ondragover="dragover('photo2',event)" ondragleave="dragleave('photo2')">
                    <p id="photo2prompt" style="vertical-align:middle;text-align:center;padding:10px;color:gray;">
                            Upload photos from your computer
                        <br/>- or -
                        <br/>Paste the URLs of pictures on the web into the line at the right</p>
                    <img id="photo2img" style="display:none" width="300px" />
                </div>
                <input type="button" onclick="showDeleteDialog(DeletePhoto2, 'the picture from the slide show')" value="X" style="color:red;background-color:#ffe0ff;vertical-align:top;"
                    title="Delete this picture from the slide show." />
            </td>
            <td>
                Upload photos:&nbsp;&nbsp;
                <input id="pic2file" onchange="UploadFile2(this.files)" type="file" title="upload" name="Upload" id="uploadpic2" multiple
                />
                <br/> or paste the web address of a picture on the web:
                <br/>
                <input id="photo2url" type="text" style="width:300px" pattern="http.*(jpg|jpeg|png|gif) *" placeholder="http...jpg|.png|.gif"
                    onchange="AddPhoto2($('#photo2url')[0].value, true)" onfocus="this.select()" title="Paste the URL (web address) of a picture."
                />
                <input type="button" value="+" onclick="AddPhoto2($('#photo2url')[0].value, true)" style="background-color:lightgreen;" title="Add the picture to this slide show."
                />
                <div id="photo2Gallery" style="overflow-y:auto;height:200px" title="Click a picture to show it on the left">

                </div>
            </td>
        </tr>
    </table>
</body>

</html>