<!DOCTYPE html>
<html>

<head>
    <title>Moylgrove</title>
    <meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
    <link rel="icon" type="image/png" href="favicon96.png" sizes="96x96" />
    <link rel="icon" type="image/png" href="favicon32.png" sizes="32x32" />
    <link rel="icon" type="image/png" href="favicon16.png" sizes="16x16" />
    <style type='text/css'>
        body {
            margin: 0;
            padding: 0;
            font-family: 'Segoe UI', Helvetica, Arial, Sans-Serif;
            overflow-y: hidden;
            -webkit-touch-callout: none;
            -webkit-user-select: none;
            -khtml-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .maphead {
            background-color: #404040;
            color: white;
            border-radius: 6px;
        }

        #theMap {
            background: lightgreen;
            overflow-y: hidden;
            display: inline-block;
            position: absolute;
            top: 0;
            left: 12em;
            right: 0px;
            bottom: 0px;
        }

        #houselist {
            margin: 4px;
            background: aliceblue;
            overflow-y: scroll;
            position: absolute;
            width: 12em;
            top: 0;
            left: 0;
            bottom: 0;
        }

        #houselist div:hover {
            background-color: #a7c3ff;
        }

        #houselist div {
            padding-left: 2em;
            text-indent: -2em;
        }

        .interesting {
            background-color: rgb(223, 223, 179);
        }

        .selectedItem {
            background-color: #404040;
            color: white;
        }

        .keySelectedItem {
            background-color: #a7c300;
        }

        .buttons {
            font-size: small;
            font-family: 'Segoe UI', Helvetica, Arial, Sans-Serif
        }

        .descriptionbox {
            padding: 2px;
            display: none;
            height: 40vh;
            background-color: rgba(255, 250, 250, 0.9);
            border-radius: 4px;
            overflow-y: auto;
            resize: both;
        }

        .description {
            font-family: 'Segoe UI', Helvetica, Arial, Sans-Serif;
            -webkit-touch-callout: text;
            -webkit-user-select: text;
            -khtml-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
            user-select: text;
        }

        
        .avbox {
            padding: 2px;
            display: none;
            background-color: rgba(255, 250, 250, 0.9);
            border-radius: 4px;
            overflow-y: auto;
        }

        .texthead {
            color: royalblue;
            font-size: large;
            font-weight: bold;
        }

        .slideimg {
            max-width: 25vw;
            height: auto;
            /*max-height: 40vh;*/
            border-radius: 6px;
        }

        .slide {
            display: none;
            position: absolute;
            bottom: 0px;
            right: 0px;
        }

        .dialog {
            display: none;
            position: fixed;
            left: 0;
            top: 0;
            right: 0;
            bottom: 0;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1;
        }

        .dialog div {
            display: inline-block;
            position: fixed;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            border-color: red;
            border-style: solid;
            border-width: 1px;
            background-color: white;
        }

        .help {
            display: none;
            position: fixed;
            left: 12em;
            right: 0px;
            bottom: 0px;
            max-height: 30vh;
            background-color: #404040;
            color: white;
            padding: 10px;
            overflow-y: auto;
        }

        .darklink {
            color: rgb(157, 209, 255);
            cursor: pointer;
        }

        .darklink:hover {
            color: rgb(132, 119, 250);
        }

        .link {
            color: blue;
            cursor: pointer;
        }

        .link:hover {
            color: purple;
        }

        th {
            font-size: small;
            font-style: italic;
            text-align: left;
            font-weight: normal;
        }
    </style>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=AryU5OBCq3C8xwf-lo7yDEdItLzoyMQfVuxBkgeZIXFXWDsqLW0WBuNmudPAqj3M&callback=loadMap'
        async defer></script>
    <script src="Scripts/history.js"></script>
    <script type="text/javascript">  var appInsights = window.appInsights || function (a) { function b(a) { c[a] = function () { var b = arguments; c.queue.push(function () { c[a].apply(c, b) }) } } var c = { config: a }, d = document, e = window; setTimeout(function () { var b = d.createElement("script"); b.src = a.url || "https://az416426.vo.msecnd.net/scripts/a/ai.0.js", d.getElementsByTagName("script")[0].parentNode.appendChild(b) }); try { c.cookie = d.cookie } catch (a) { } c.queue = []; for (var f = ["Event", "Exception", "Metric", "PageView", "Trace", "Dependency"]; f.length;)b("track" + f.pop()); if (b("setAuthenticatedUserContext"), b("clearAuthenticatedUserContext"), b("startTrackEvent"), b("stopTrackEvent"), b("startTrackPage"), b("stopTrackPage"), b("flush"), !a.disableExceptionTracking) { f = "onerror", b("_" + f); var g = e[f]; e[f] = function (a, b, d, e, h) { var i = g && g(a, b, d, e, h); return !0 !== i && c["_" + f](a, b, d, e, h), i } } return c }({ instrumentationKey: "1eff7d7b-45c5-4162-9d8c-5019829546ab" }); window.appInsights = appInsights, appInsights.queue && 0 === appInsights.queue.length && appInsights.trackPageView();</script>
</head>

<body onkeyup="keystroke(event)">
    <div id='houselist'>
        <span style='background-color:yellow;'>
            <b>Getting the list of places...</b>
        </span>
    </div>
    <div id='theMap'>
        <h2 style="color:darkgreen;font-family: 'Times New Roman', Times, serif">&nbsp;
            <br/>
            <br/> Just a moment please... </h2>
    </div>
    <!-- Title and map type switch -->
    <div class="maphead" style='position:absolute;top:0;right:0;width:500px;height:50px;'>
        <div id="historyTitle" style="display:block;position:relative;top:0px;left:0px;margin-left:10px;border-radius:4px;
                     font-size:24pt;font-family:'Times New Roman', Times, serif;font-style:italic;">Moylgrove History Map
        </div>
        <div style="position:absolute;top:0px;right:0px;display:block;">
            <input type="radio" name="mapSelector" value="os" onchange="mapChange('os')" />Ordnance Survey
            <br/>
            <input type="radio" name="mapSelector" value="aerial" onchange="mapChange('aerial')" checked="checked" />Aerial photos
        </div>
        <img style="position: fixed;top:0px;right:500px;" src="favicon96.png" />
    </div>
    <div id="helpButton" style="position:fixed;right:30px;top:160px;">
        <img src="img/help.png" onclick="$('#help').toggle('slide')" ).fade/>
    </div>
    <div id="searchPanel" class="maphead" style="position:absolute;top:50px;right:100px;width:400px;visibility:false;" onkeyup="if (event.cancelBubble) {event.cancelBubble=true;} if (event.stopPropagation) {event.stopPropagation();} if (event.keyCode==13) searchPerson();"
        title="Search for a historical person.">
        Name:
        <input type="text" id="searchName" placeholder="firstName [lastName]" title="Person's first and/or last name" /> Born:
        <input type="text" size="4" id="searchYob" placeholder="birth yr" title="Year of birth (optional)" />
        <span onclick="searchPerson()">
            <img src="img/search30.png" height="20" />
        </span>
        <div style="position:absolute; top:0px;right:10px">
            <span onclick="$('#searchResult').hide(200)" style="font-size:large;">X</span>
        </div>
        <div id="searchResult">
        </div>
    </div>
    <!-- Place info panel -->
    <div style="width:25vw;height:auto;position:absolute;top:0;left:12em;">
        <div id="textbox" class="descriptionbox"></div>
        <div id="audiodiv" class="avbox"></div>
        <div id="firstpic" style="display:none;border-radius:4px;max-height:50vh;"></div>
    </div>
    <div id="secondpic" style="display:none;position:absolute;bottom:0px;right:0px;max-width:25vw;"></div>
    <!-- Popups -->
    <div id="message" style="display:none;position:absolute;top:30vh;left:40vw;width:450px;height:100px;background-color:white;padding:20px;">
    </div>
    <div id="deleteDialog" class="dialog" style="text-align: left;" onClick="$(this).hide();">
        <div>
            <p>Delete this place completely and permanently from the map?</p>
            <span class="toolbutton" style="background-color:lightgreen">No, keep it</span> &nbsp;&nbsp;&nbsp;&nbsp;
            <span class="toolbutton" style="background-color:red" onClick="DeleteConfirmed($('#deleteDialog')[0].place)">Yes, remove it</span>
        </div>
    </div>
    <div id="help" class="help" onclick="$(this).hide('slide')">
        <p>On this map, you can record historical notes about your house and other places around Moylgrove.</p>
        <ul>
            <li>Click any red dot, or click in the list, to see notes and pictures about that place.</li>
            <li>Click on a photo to see a larger view of it. Close the new window to come back to this one.</li>
            <li>Some places have a little Street View. You can turn around and move along the road in it.</li>
            <li>Census and gravestone data: click a person to find out where else they lived.</li>
            <li>Click the "Add/change" button if you'd like to contribute information about a place.
            </li>
            <li>To add a new place to the map, right-click/CTRL+click the position on the map.</li>
            <li>Problems? Email alan@pantywylan.org</li>
        </ul>
        <p>Please add notes about the history of your house, so that we can build up an interesting map!</p>
        <div style="position:absolute;top:0px;right:0px;padding:4px;margin:2px;background-color:red;color:white;">X</div>
    </div>
    <div id="census" class="help" onclick="$(this).hide('slide')">
        <p>Census entries tell us who was present in a house on the night of the census. They don't say who normally lived there,
            or where those present normally lived. Sailors, for example, are often not at home.</p>
        <p>The columns are: Recorded name of house (if different from the modern name); name; date of birth (+/- 1yr); age;
            relationship to head of household; marital state; occupation.</p>
        <p>There may be a few instances where the house name has changed, and the details have been attached to the wrong house.
            If you've found one of those cases, please email alan@pantywylan.org
        </p>
        <p>Click a person to find out where else they (or someone with their name and birth year) can be found.</p>
        <div style="position:absolute;top:0px;right:0px;padding:4px;margin:2px;background-color:red;color:white;">X</div>
    </div>
    <script type='text/javascript'>
        var imgUrl = "https://moylgrove-history.azurewebsites.net/images/";
        var apiUrl = "https://moylgrove-history.azurewebsites.net/api/";
        var avUrl = "https://moylgrove-history.azurewebsites.net/av/";
        if (window.location.protocol == "http:" && window.location.hostname != "localhost") {
            window.location = window.location.href.replace("http:", "https:");
        }
        window.pinColor = "#A00000";

        // Keyboard search:
        window.khighlit = null;
        var ksts = null;
        var kstring = "";
        var kselected = -1;
        function keystroke(e) {
            var t = new Date().getTime();
            var category = "fail";
            if (e.key.length == 1) {
                var ch = e.key.toLocaleLowerCase();
                if (ch >= "a" && ch <= "z") {
                    if (ksts && t - ksts < 2000) {
                        kstring += ch;
                    }
                    else {
                        kstring = ch;
                    }
                }
                if (e.cancelBubble != null) e.cancelBubble = true;
                var toSelect = null;
                for (var i in window.orderedList) {
                    if (orderedList[i].cf.localeCompare(kstring) >= 0) {
                        kselected = orderedList[i].id;
                        toSelect = "#h" + kselected;
                        break;
                    }
                }
                if (toSelect) {
                    if (window.khighlit) { window.khighlit.removeClass("keySelectedItem"); }
                    window.khighlit = $(toSelect);
                    window.khighlit[0].scrollIntoView();
                    window.khighlit.addClass("keySelectedItem");
                    category = "found";
                }
                else { category = "not found"; }
                ksts = t;
            }
            else if (kselected >= 0 && e.keyCode == 27) { // esc
                if (window.khighlit) { window.khighlit.removeClass("keySelectedItem"); }
                ksts = null;
                kstring = "";
                kselected = -1;
            } else if (e.keyCode == 38 || e.keyCode == 40) { // arrows
                if (window.khighlit) {
                    window.khighlit.removeClass("keySelectedItem");
                    var toSelect = e.keyCode == 40 ? window.khighlit.next() : window.khighlit.prev();
                    if (toSelect) {
                        window.khighlit = toSelect;
                        window.khighlit[0].scrollIntoView();
                        window.khighlit.addClass("keySelectedItem");
                        kselected = toSelect[0].id.substr(1);
                        category = "arrow";
                    }
                    ksts = t;
                }
            } else if (kselected >= 0 && e.keyCode < 16) {
                go(kselected, true);
                ksts = null;
                kstring = "";
                kselected = -1;
                category = "go";
            }

            appInsights.trackEvent("key", { "category": category }, {});
        }


        // Highlight place on the LHS list.
        // item == null -> just clear the selection
        // fromList : user clicked the place on the LHS list, not the map
        function selectOnList(item, fromList) {
            if (window.khighlit) { window.khighlit.removeClass("keySelectedItem"); }
            if (window.selectedItem) {
                $("#" + window.selectedItem).removeClass("selectedItem");
            }
            if (item) {
                window.selectedItem = "h" + item;
                var jItem = $("#" + window.selectedItem);
                jItem.addClass("selectedItem");
                if (!fromList) {
                    jItem[0].scrollIntoView();
                    //var offset = jItem.offset();
                    //$("#houselist").animate({scrollTop:offset.top-20});
                }
            }
        }

        // Highlight place on map.
        // place == null to just clear the selection
        // fromList : user chose place from the LHS list, not the map
        function selectOnMap(place, fromList) {
            // Clear current highlight:
            if (window.selectedPin != null) {
                window.selectedPin.setOptions({ color: window.selectedPin.myColor, enableClickedStyle: false });
            }

            if (place == null) {
                window.selectedPin = null;
            }
            else {
                window.selectedPin = place.pin;
                //window.pinColor = place.pin.getColor();
                place.pin.setOptions({ color: Microsoft.Maps.Color.fromHex('#FF00F0') });

                if (fromList) {
                    // Don't change the zoom level if it would change the map type:
                    var currentZoom = window.map.getZoom();
                    var isOS = window.map.getMapTypeId() == "os";
                    var newzoom = isOS && place.zoom > 17 ? 17 : place.zoom;

                    // Move place into view:
                    window.map.setView({ center: place.location, zoom: newzoom });
                }
            }
        }

        // Display the upper picture, which can be a streetview.
        // If streetview, the url is abbreviated from the Google URL.
        function showStreetView(picUrl) {
            if (picUrl && picUrl.length > 0) {
                var content = "";
                if (picUrl[0] == "!") {
                    var ww = $("#textbox").width();
                    // var maxh = $("#theMap").height() * 0.3;
                    var hh = Math.round(ww * 0.75);
                    content = "<iframe src='https://www.google.com/maps/embed?pb={0}' id='streetview' width='{1}px' height='{2}px' frameborder='0' style='border:0' allowfullscreen></iframe>".format(picUrl, ww, hh);
                }
                else {
                    var picBlob = picUrl.replace(/^images\//, imgUrl);
                    content = "<a target='_new' href='{0}'><img src='{0}' style='max-width:25vw;height:auto;border-radius:6px;'></img></a>".format(picBlob);
                }
                $("#firstpic").html(content);
                $("#firstpic").fadeIn("slow");
            } else {
                $("#firstpic").slideUp("slow");
            }
        }

        // Display the second picture, which can be a slide show.
        // If slide show, the URLs are separated by semicolons.
        function showSlides(picUrlstring) {
            if (picUrlstring && picUrlstring.length > 0) {
                var urls = picUrlstring.split(";");

                var content = "";
                if (urls.length > 1) {
                    for (var i in urls) {
                        var picBlob = urls[i].replace(/^images\//, imgUrl);
                        content += "<div class='slide'><a target='pic' href='{0}'><img src='{0}' class='slideimg'></img></a></div>".format(picBlob);
                    }
                    $("#secondpic").html(content);
                    $("#secondpic").slideDown();
                    $('#secondpic div:first').show();
                    if (window.fader) { clearInterval(window.fader); }
                    window.fader = setInterval(function () {
                        var pic = $('#secondpic div:first');
                        pic
                            .fadeOut(500)
                            .next()
                            .fadeIn(500)
                            .end()
                            .appendTo('#secondpic');
                    }, 6000);
                }
                else {
                    if (window.fader) { clearInterval(window.fader); window.fader = null; }
                    var picBlob = picUrlstring.replace(/^images\//, imgUrl);
                    content = "<a target='pic' href='{0}'><img src='{0}' class='slideimg'></img></a>".format(picBlob);
                    $("#secondpic").html(content);
                    $("#secondpic").slideDown();
                }
            }
            else {
                $("#secondpic").slideUp("slow");
                if (window.fader) { clearInterval(window.fader); window.fader = null; }
            }
        }

        function showLink(id) {
            var url = window.location.origin + window.location.pathname + "?place=" + id;
            $("#message").html("To show someone else this place, copy and send them this link:<br/>"
                + "<input id='msgbox' type='text' value='{0}' size={1} readonly></input>".format(url, url.length + 2));
            $("#message").show();
            $("#msgbox")[0].setSelectionRange(0, url.length);
            $("#msgbox")[0].focus();
            appInsights.trackEvent("showLink ");
        }

        function editPlace(id, title) {
            if (true) {
                window.open("editor.htm?id=" + id, target = "edit");
                appInsights.trackEvent("edit", { admin: "1" }, {});
            }
            else {
                window.open("mailto:alan@pantywylan.org?subject=change {0} {1}".format(id, title));
                appInsights.trackEvent("edit", { admin: "0" }, {});
            }
        }

        function showMainText(id, place) {
            var description = ("<table width='100%'><tr><td class='texthead'>{4}</td><td align='right'>{5}</td></tr>"
                + "<tr><td><small>{6}</small></td><td align='right'><small>{7}</small></td></tr></table>"
                + "<span class='description'>{0}</span>"
                + "<table width='100%' class='buttons'><tr>"
                + "<td><a href='#' onclick='editPlace({1},\"{4}\")'>{8}</a></td>"
                + "<td align='center'><a href='#' onclick='showLink({1})'>Share</a></td>"
                + "<td align='right'><a href='mailto:?subject=Directions&body=Click this link for directions:%0A https://www.google.co.uk/maps/dir//{2},{3}/@{2},{3},11z '>Send directions</a></td></tr></table>")
                .format(trimQuotes(place.text), id, place.location.latitude, place.location.longitude,
                    place.title.replace("'", ""), place.postcode, place.subtitle, place.year,
                    (window.isAdmin ? "Edit" : "Add/change pics or info")
                );
            $("#textbox").html(description);
            $("#textbox").fadeIn("slow");
        }

        function search(table, first, last, year, place, process) {
            if (typeof fetch !== 'undefined') {
                fetch(apiUrl + "{0}?first={1}&last={2}&year={3}&place={4}"
                    .format(table, first || "", last || "", year || "", place || ""))
                    .then(function (response) { return response.json(); })
                    .then(function (results) { process(results); });
            }
            else {
                $.get(apiUrl + "{0}?first={1}&last={2}&year={3}&place={4}"
                    .format(table, first || "", last || "", year || "", place || ""),
                    function (data, status) {
                        process(data);
                    });
            }
            appInsights.trackEvent("search");
        }

        function searchPerson() {
            var gn = $('#searchName')[0].value.split(" ");
            var syob = $('#searchYob')[0].value;
            $('#searchResult').show(200);
            $('#searchResult').html("<table><tr><th>source</th><th>house</th><th>given</th><th>surname</th><th>b</th><th>origin</th></table>");
            search("census", gn[0], gn[1], syob, "", function (results) {
                if (results.length > 0) {
                    var s = "";
                    for (var i = 0, t; t = results[i]; i++) {
                        s += "<tr><td>{0}cs</td><td><span {6} onclick='go({5},1)'>{1}</span></td><td>{2}</td><td>{3}</td><td>{4}</td><td>{7}</td></tr>"
                            .format(t.PartitionKey, t.HouseName, t.GivenNames, t.Surname, t.YoB, t.PlaceId,
                                t.PlaceId ? "class='darklink'" : "", t.Origin);
                    }
                    $('#searchResult > table > tbody').append(s);
                }
            });
            search("graves", gn[0], gn[1], syob, "", function (results) {
                if (results.length > 0) {
                    var s = "";
                    for (var i = 0, t; t = results[i]; i++) {
                        s += "<tr><td>grave</td><td><span {6} onclick='go({5},1)'>{0}</span></td><td>{1}</td><td>{2}</td><td>{3}</td><td>- {4}</td></tr>"
                            .format(t.home, t.firstNames, t.lastName, t.yob, t.yod, t.assigned,
                                t.assigned ? "class='darklink'" : "");
                    }
                    $('#searchResult > table > tbody').append(s);
                }
            });
        }

        function startSearch(firsts, last, yob) {
            appInsights.trackEvent("clickPerson");
            var first = firsts.split(" ")[0];
            $('#searchName')[0].value = first + " " + last;
            $('#searchYob')[0].value = yob;
            searchPerson();
        }


        function getPeopleData(id, houseName) {
            if (!id) return;
            var censusYears = {};
            search("census", "", "", "", id, function (result) {
                if (result.length > 0) {
                    var showHouseName = false;
                    var cf = comparable(houseName);
                    for (var i = 0, t; t = result[i]; i++) {
                        if (comparable(t.HouseName) != cf) { showHouseName = true; }
                        if (!censusYears[t.PartitionKey]) { censusYears[t.PartitionKey] = []; }
                        censusYears[t.PartitionKey].push(t);
                    }
                    $("#textbox").append("<h4><a href='#' onclick=\"$('#census').toggle('slide')\">Census entries</a></h4>");
                    var householdName = "";
                    var s = "<table>";
                    for (var cy in censusYears) {
                        var yearEntries = censusYears[cy];
                        s += "<tr><td colspan=5><b>{0}</b></td></tr>".format(cy);
                        for (var i = 0, t; t = yearEntries[i]; i++) {
                            if (showHouseName && t.HouseName != householdName) {
                                householdName = t.HouseName;
                                s += "<tr><td colspan=5><i>{0}</i></td></tr>".format(householdName);
                            }
                            s += "<tr><td><span class='link' onclick='startSearch(\"{0}\", \"{1}\", \"{2}\")'>{0} {1}</span></td><td>{2}</td><td>{3}</td><td>{4}</td><td>{5}</td><td>{6}</td></tr>".format(
                                t.GivenNames, t.Surname, t.YoB.substr(0, 4), t.Age,
                                decode({ h: "head", sole: "head", w: "wife", s: "son", d: "dgtr", b: "bro" }, t.Relationship),
                                decode({ s: "sgl", m: "mrd", u: "unm", w: "wdw", d: "div" }, t.Condition), t.Occupation);
                        }
                    }
                    s += "</table>";
                    $("#textbox").append(s);
                }
            });
        }
        function decode(m, code) {
            var d = m[code];
            return d ? d : code;
        }

        function getGraves(id) {
            if (!id) return;
            search("graves", "", "", "", id, function (result) {
                if (result.length > 0) {
                    result.sort(function (a, b) { return a.yod - b.yod; });
                    var s = "<h4><a href='https://drive.google.com/file/d/1LjXR1C27fwazM0Ovib4oKRdfxY47TAcc/view' target='graves'>Gravestones</a></h4>"
                        + "<table>";
                    for (var i = 0, t; t = result[i]; i++) {
                        s += ("<tr><td>{0}</td><td>-{1}</td><td><span class='link' onclick='startSearch(\"{2}\", \"{3}\", \"{0}\")'>{2}</span></td>"
                            + "<td><span class='link' onclick='startSearch(\"{2}\", \"{3}\", \"{0}\")'>{3}</span></td><td>{4}</td><td>{5}</td><td>{6}</td></tr>").format(
                                t.yob, t.yod, t.firstNames, t.lastName, t.age, t.home, t.graveId);
                    }
                    s += "</table>";
                    $("#textbox").append(s);
                }
            });
        }

        function listAudio() {
            $.get("https://moylgrovehistory.blob.core.windows.net/audiovis?restype=container&comp=list", function (data, status) {
                var nameElements = data.getElementsByTagName("Name");
                window.avlist = $.makeArray(nameElements).map(x=>x.innerHTML.replace(".mp3", ""));
            });
        }

        function getAudio(id) {
            if (!id) return;
            $("#audiodiv").hide();
            try {
                if (window.avlist.includes(id)) {
                    try {
                        $("#audiodiv").html("<audio controls><source src='{0}{1}.mp3' type='audio/mpeg'></source></audio><br/>Commentary &copy; Sally James".format(avUrl, id));
                        $("#audiodiv").show();
                    } catch (ex) { }
                };
            } catch (exx) { 
                var exxx = exx;
            }
        }
        listAudio();

        function DeletePlace(id) {
            $("#message").hide();
            $("#census").hide();
            $("#deleteDialog")[0].place = id;
            $("#deleteDialog").show();
            appInsights.trackEvent("delete", { place: id }, {});
        }

        function DeleteConfirmed(id) {
            $.ajax({
                url: apiUrl + 'remove?code=U38IwtWc7nxEpwdGjVwVAdLH/Y5evmuX3JZAxQiAwXSpkx48utDyMg==',
                type: 'PUT',
                data: '{ "RowKey" : "' + id + '"}',
                contentType: 'application/json',
                success: function (a, e, r) {
                    window.open(location.origin + location.pathname, "_self");
                }
            }
            );
        }

        // On user clicks a place
        function go(id, fromList) {
            $("#message").hide();
            var place = window.items[id];
            selectOnList(id, fromList);
            selectOnMap(place, fromList);
            if (!window.noHistory) {
                showMainText(id, place);
                showStreetView(place.pic1);
                showSlides(place.pic2);
                getPeopleData(id, place.title);
                getGraves(id);
                getAudio(id);
            }
            var t = 0;
            if (window.loadedTime) {
                var tnow = new Date().getTime();
                t = tnow - window.loadedTime;
            }
            appInsights.trackEvent("place", { place: id }, { t: t });
        }

        function setUpMapMenu() {
            window.menuBox = new Microsoft.Maps.Infobox(
                window.map.getCenter(),
                {
                    visible: false,
                    showPointer: true,
                    offset: new Microsoft.Maps.Point(0, 0),
                    actions: [
                        {
                            label: "Add place here  .",
                            eventHandler: function () {
                                var loc = window.menuBox.getLocation();
                                window.menuBox.setOptions({ visible: false });
                                if (window.isAdmin) {
                                    window.open("editor.htm?cmd=add&lat={0}&long={1}".format(loc.latitude, loc.longitude), "_blank");
                                }
                                else {
                                    window.open("mailto:alan@pantywylan.org?subject=add%20{0},{1}&body=Please describe what you'd like to add, and attach any photos:".format(loc.latitude, loc.longitude), "_self");
                                }
                            }
                        }
                    ]
                });
            window.menuBox.setMap(window.map);
            Microsoft.Maps.Events.addHandler(window.map, "rightclick",
                function (e) {
                    window.menuBox.setOptions({
                        location: e.location,
                        visible: true
                    });
                });
        }

        function setUpMapClick() {
            Microsoft.Maps.Events.addHandler(window.map, "click", function (e) {
                if ($("#message").is(":visible")) {
                    $("#message").fadeOut();
                }
                else {
                    $("#textbox").fadeOut();
                    $("#audiodiv").hide();
                    $("#firstpic").fadeOut();
                    $("#secondpic").fadeOut();
                    $("#message").fadeOut();
                    $("#census").fadeOut();
                    selectOnMap(null, false);
                    selectOnList(null, false);
                    if (window.fader != null) { clearInterval(fader); window.fader = null; }
                }
                if (window.menuBox != null) { window.menuBox.setOptions({ visible: false }); }
            });
        }

        function gotTable(results) {
            if (results == null) return;
            window.orderedList = [];
            window.interesting = [];
            for (var i = 0, t; t = results[i]; i++) {
                if (!t.Title) continue; // index or other housekeeping
                try {
                    var place = {
                        title: trimQuotes(t.Title),
                        subtitle: t.Subtitle,
                        id: t.RowKey,
                        postcode: t.Postcode,
                        location: new Microsoft.Maps.Location(t.Latitude, t.Longitude),
                        zoom: t.Zoom == "1" ? 19 : 17,
                        pic1: t.Pic1,
                        pic2: t.Pic2,
                        text: t.Text,
                        year: t.Year,
                        updated: new Date(t.Updated || "2010-01-01T00:00:00.000Z")
                    };
                    // For alphabetic sorting:
                    place.cf = comparable(place.title);
                    // For lookup by id:
                    window.items[place.id] = place;

                    if (place.cf.length > 0) {
                        window.orderedList.push(place);
                        if (place.text.length > 1000) { window.interesting.push(place); }
                        var postcodeLetter = !window.noHistory && place.year ? ("" + place.year).substr(1, 2) : place.postcode.substr(-1, 1);
                        var thisPinColor = place.text.length > 300 ? "#FF0000" : "#A00000";
                        var pushpin = new Microsoft.Maps.Pushpin(
                            place.location,
                            { title: place.title, text: postcodeLetter, subTitle: place.subtitle, color: thisPinColor, enableHoverStyle: true }
                        );
                        pushpin.myColor = thisPinColor;
                        pushpin.id = place.id;
                        window.map.entities.push(pushpin);
                        place.pin = pushpin;
                        if (!window.noHistory) {
                            Microsoft.Maps.Events.addHandler(pushpin, 'click', function (e) {
                                if (e) {
                                    go(e.primitive.id, false);
                                }
                            });
                        }
                    }
                } catch (error) { }
            }


            window.orderedList = window.orderedList.sort(function (a, b) {
                return a.cf.localeCompare(b.cf);
            });
            window.interesting = window.interesting.sort(function (a, b) {
                return b.updated - a.updated;
            }).slice(0, 5);

            var listContent = "";
            for (var i in window.orderedList) {
                var item = window.orderedList[i];
                var isInteresting = !window.noHistory && $.inArray(item, window.interesting) >= 0;

                listContent += "<div id='h{0}' {2} onClick='go({0},true)'>{1}</div>".format(item.id, item.title, (isInteresting ? "class='interesting'" : ""));
            }
            $("#houselist").html(listContent);

            if (!window.noHistory){
                setUpMapMenu();
                $("#searchPanel").show();
            }

            if (window.location.queryParameters.place != null) {
                go(window.location.queryParameters.place, true);
            }

        }


        function mapChange(v) {
            if (v == "os") {
                if (window.map.getZoom() > 17) {
                    window.map.setView({ zoom: 17, mapTypeId: Microsoft.Maps.MapTypeId.ordnanceSurvey });
                }
                else {
                    window.map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.ordnanceSurvey });
                }
            }
            else {
                window.map.setView({ mapTypeId: Microsoft.Maps.MapTypeId.aerial });
            }
        }

        // On page load
        function loadMap() {

            $(document).ready(function () {
                window.isAdmin = window.location.queryParameters.edit == "YrHenYsgol";
                window.noHistory = window.location.queryParameters.history == "0";
                if (window.noHistory) {
                    // Map is just for identifying places
                    $("#helpButton").hide();
                    $("#historyTitle").text("Trewyddel::Moylgrove");
                }
                window.map = new Microsoft.Maps.Map(document.getElementById('theMap'),
                    {
                        mapTypeId: Microsoft.Maps.MapTypeId.aerial,
                        center: new Microsoft.Maps.Location(52.068287, -4.747708),
                        showLocateMeButton: false,
                        disableKeyboardInput: true,
                        zoom: 16
                    });
                setUpMapClick();

                window.items = {};

                if (typeof fetch !== 'undefined') {
                    appInsights.trackEvent("load", { admin: isAdmin, noHistory: window.noHistory, fetch: "true" }, {});
                    fetch(apiUrl + "places")
                        .then(function (response) { return response.json(); })
                        .then(gotTable)
                        .catch(function (err) {
                            window.alert("Sorry - problem getting the map data. Please tell alan@pantywylan.org");
                        });
                } else {
                    appInsights.trackEvent("load", { admin: isAdmin, noHistory: window.noHistory, fetch: "false" }, {});
                    $.get(apiUrl + "places", function (data, status) {
                        gotTable(data);
                    });
                }
                window.loadedTime = new Date().getTime();
            })
        };
    </script>
</body>

</html>